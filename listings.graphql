extend schema
  @link(url: "https://specs.apollo.dev/federation/v2.8", import: ["@key"])
  @link(
    url: "https://specs.apollo.dev/connect/v0.1"
    import: ["@connect", "@source"]
  )
  @source(
    name: "listings"
    http: { baseURL: "https://rt-airlock-services-listing.herokuapp.com" }
  )

type Query {
  "A curated array of listings to feature on the homepage"
  featuredListings: [Listing!]!
    @connect(
      source: "listings"
      http: { GET: "featured-listings" }
      selection: """
      id
      title
      numOfBeds
      costPerNight
      closedForBookings
      """
    )

  # EXERCISE: LISTING DETAILS
  # "A specific listing"
  # listing(id: ID!): Listing
}

"A particular intergalactic location available for booking"
type Listing {
  id: ID!
  "The listing's title"
  title: String!
  "The number of beds available"
  numOfBeds: Int
  "The cost per night"
  costPerNight: Float
  "Indicates whether listing is closed for bookings (on hiatus)"
  closedForBookings: Boolean
  # EXERCISE: LISTING AMENITIES
  # "The amenities available for this listing"
  # amenities: [Amenity!]!
}

# type Amenity {
#   id: ID!
#   "The amenity category the amenity belongs to"
#   category: String!
#   "The amenity's name"
#   name: String!
# }

# EXERCISE: MUTATIONS
# input CreateListingInput {
#   title: String!
#   numOfBeds: Int
#   costPerNight: Float
#   closedForBookings: Boolean
# }

# type CreateListingResponse {
#   listing: Listing
# }

# type Mutation {
#   createListing(input: CreateListingInput!): CreateListingResponse
# }
